/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ryandurling' at '1/6/14 2:15 PM' with Gradle 1.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.10/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

sourceSets {
    main.java.srcDirs = ['src/main/pij']
    test.java.srcDirs = ['src/test/pij']
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5',
            'com.google.inject:guice:3.0',
            'com.esotericsoftware.kryo:kryo:2.23.0'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11",
            'org.mockito:mockito-core:1.9.5',
            'com.github.stefanbirkner:system-rules:1.4.0'
}

test {
    testLogging {
        // Show that tests are run in the command-line output
        events 'passed'
        exceptionFormat "full"
        // set options for log level DEBUG
        debug {
            events "started", "skipped", "failed"
        }
    }
}
